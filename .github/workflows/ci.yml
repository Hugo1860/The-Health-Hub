name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: audio-blog/package-lock.json
    
    - name: Install dependencies
      run: |
        cd audio-blog
        npm ci
    
    - name: Run linter
      run: |
        cd audio-blog
        npm run lint
    
    - name: Run type check
      run: |
        cd audio-blog
        npm run type-check
    
    - name: Run tests
      run: |
        cd audio-blog
        npm run test
    
    - name: Build application
      run: |
        cd audio-blog
        npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-${{ matrix.node-version }}
        path: audio-blog/.next/
        retention-days: 1

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: audio-blog/package-lock.json
    
    - name: Install dependencies
      run: |
        cd audio-blog
        npm ci
    
    - name: Run security audit
      run: |
        cd audio-blog
        npm audit --audit-level=high
    
    - name: Run dependency check
      run: |
        cd audio-blog
        npx depcheck

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to preview
      run: |
        echo "Deploying to preview environment..."
        # Add your preview deployment commands here

  deploy-production:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        # Add your production deployment commands here
    
    - name: Notify deployment
      run: |
        echo "Production deployment completed successfully!"