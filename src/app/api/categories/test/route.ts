import { NextRequest, NextResponse } from 'next/server';

// ÁÆÄÂçïÁöÑÊµãËØïË∑ØÁî±Ôºå‰∏ç‰æùËµñÂ§çÊùÇÁöÑÊúçÂä°
export async function GET(request: NextRequest) {
  try {
    console.log('üß™ Categories test API called');
    
    // ÊµãËØïÊï∞ÊçÆÂ∫ìËøûÊé•
    const db = (await import('@/lib/db')).default;
    
    console.log('üì° Testing database connection...');
    const isConnected = db.isConnected();
    console.log('Database connected:', isConnected);
    
    // ÁÆÄÂçïÊü•ËØ¢ÊµãËØï
    console.log('üìã Testing simple query...');
    const result = await db.query('SELECT COUNT(*) as count FROM categories');
    const categoryCount = result.rows[0]?.count || 0;
    
    console.log('Category count:', categoryCount);
    
    // Ê£ÄÊü•Ë°®ÁªìÊûÑ
    console.log('üèóÔ∏è Checking table structure...');
    const columnsResult = await db.query(`
      SELECT column_name, data_type 
      FROM information_schema.columns 
      WHERE table_name = 'categories'
      ORDER BY ordinal_position
    `);
    
    const columns = columnsResult.rows.map(row => ({
      name: row.column_name,
      type: row.data_type
    }));
    
    console.log('Categories table columns:', columns);
    
    return NextResponse.json({
      success: true,
      message: 'Categories API test successful',
      data: {
        databaseConnected: isConnected,
        categoryCount: parseInt(categoryCount),
        tableColumns: columns,
        timestamp: new Date().toISOString()
      }
    });
    
  } catch (error) {
    console.error('‚ùå Categories test API error:', error);
    
    return NextResponse.json({
      success: false,
      error: {
        code: 'TEST_ERROR',
        message: error instanceof Error ? error.message : 'Unknown error',
        stack: error instanceof Error ? error.stack : undefined
      }
    }, { status: 500 });
  }
}